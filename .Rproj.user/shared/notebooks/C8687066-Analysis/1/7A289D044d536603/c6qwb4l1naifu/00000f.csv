"0","get_variant_types <- function(org, mut){"
"0","  # Returns the class of mutation given the original and mutant variants."
"0","  muts <- unlist(strsplit(mut, split = ','))"
"0","  types <- character()"
"0","  "
"0","  if (all(nchar(muts) == nchar(org))){"
"0","    return('substitution')"
"0","  }"
"0","  "
"0","  if (any(nchar(muts) > nchar(org))){"
"0","    types <- c(types, 'insertion')"
"0","  }"
"0","  "
"0","  if (any(nchar(muts) < nchar(org))){"
"0","    types <- c(types, 'deletion')"
"0","  }"
"0","  "
"0","  if (any(nchar(muts) - nchar(org) %% 3 != 0)){"
"0","    types <- c(types, 'frameshift')"
"0","  }"
"0","  "
"0","  return(types)"
"0","}"
"0",""
"0","to_igv_coords <- function(chr, pos){"
"0","  # Get IGV Coords."
"0","  return(paste0(c(chr, ':', as.character(pos)), collapse='', sep=''))"
"0","}"
"0",""
"0",""
"0","library(readr)"
"0","vars_org <- read_csv(""mgy21_S101_R1_001_analyzed.csv"")"
"2","[1mRows: [22m[34m266[39m [1mColumns: [22m[34m11[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m (9): #CHROM, ID, REF, ALT, FILTER, INFO, FORMAT, /home/rothlab/dtabet/MGY360/outp...
[32mdbl[39m (2): POS, QUAL"
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","vars <- data.frame(chr=vars_org$`#CHROM`, pos = vars_org$POS, org=vars_org$REF,"
"0","                   mut=vars_org$ALT, qual=vars_org$QUAL)"
"0",""
"0","vars$coords <- c()"
"0","for (i in seq_along(vars$chr)){"
"0","  vars$coords[i] <- to_igv_coords(vars$chr[i], vars$pos[i])"
"0","}"
"0",""
"0","muts <- list()"
"0",""
"0","for (i in seq_along(vars$chr)){"
"0","  muts[i] <-  list(get_variant_types(vars$org[i], vars$mut[i]))"
"0","}"
"0",""
"0","is_of_mut_type <- function(types, mut){"
"0","  # Return whether each mut types in <types> is of type <mut>."
"0","  return(unlist(lapply(types, function(x){mut %in% x})))"
"0","}"
"0",""
"0","num_insertion <- sum(is_of_mut_type(muts, 'insertion'))"
"0","num_substitution <- sum(is_of_mut_type(muts, 'substitution'))"
"0","num_deletion <- sum(is_of_mut_type(muts, 'deletion'))"
"0","num_pot_framshift <- sum(is_of_mut_type(muts, 'frameshift'))"
"0",""
